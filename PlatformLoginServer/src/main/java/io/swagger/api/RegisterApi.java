/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PlayerLoginData;
import io.swagger.model.PlayerLoginResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-10T09:24:57.661Z")

@Api(value = "register", description = "the register API")
public interface RegisterApi {

    @ApiOperation(value = "registers a player", nickname = "registerPlayer", notes = "Adds player login data to the system", response = PlayerLoginResponse.class, tags={ "serverapp", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "player created", response = PlayerLoginResponse.class),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "player already registered") })
    @RequestMapping(value = "/register",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PlayerLoginResponse> registerPlayer(@ApiParam(value = "Login data to add"  )  @Valid @RequestBody PlayerLoginData playerLogin);

}
